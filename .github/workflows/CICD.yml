name: CI - Python

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev 
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest || true

      - name: Login to JFrog Docker Registry
        run: echo "${{ secrets.JFROG_ACCESS_TOKEN }}" | docker login ${{ secrets.JFROG_REGISTRY }} -u ${{ secrets.JFROG_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.JFROG_REGISTRY }}/flask-app:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.JFROG_REGISTRY }}/flask-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: dev

    steps:

      - name: Log in to JFrog Docker Registry
        run: echo "${{ secrets.JFROG_ACCESS_TOKEN }}" | docker login ${{ secrets.JFROG_REGISTRY }} -u "${{ secrets.JFROG_USERNAME }}" --password-stdin

      - name: Pull latest image
        run: docker pull ${{ secrets.JFROG_REGISTRY }}/flask-app:latest

      - name: Stop existing container (if running)
        run: docker rm -f flask-app || true

      - name: Run new container
        run: |
          docker run -d --name flask-app \
            -p 5000:5000 \
            ${{ secrets.JFROG_REGISTRY }}/flask-app:latest